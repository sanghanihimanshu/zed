name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger the workflow on version tags

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: wasm32-wasi
        override: true

    - name: Install MSVC Build Tools and Windows SDK
      run: choco install visualstudio2019buildtools visualstudio2019-workload-vctools windows-sdk-10.0

    - name: Install docker dependencies
      run: docker compose up -d
      
    - name: Install Cargo dependencies
      run: cargo fetch
      
    - name: Run Tests
      run: cargo test --workspace
      
    - name: Build Debug
      run: cargo build

    - name: Build Release
      run: cargo build --release

    - name: Create Release Directory
      run: mkdir release

    - name: Copy Release Binaries
      run: copy target\release\zed.exe release\zed.exe

    - name: Upload Release Asset
      uses: actions/upload-artifact@v2
      with:
        name: zed-windows
        path: release/zed.exe

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Release Asset
      uses: actions/download-artifact@v2
      with:
        name: zed-windows
        path: release

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release of version ${{ github.ref }}.
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release/zed.exe
        asset_name: zed-windows-${{ github.ref }}.exe
        asset_content_type: application/octet-stream
